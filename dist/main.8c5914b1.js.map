{"version":3,"sources":["src/js/GetAverageColorFromImage.js","src/js/ColorUtils.js","src/main.js"],"names":["GetAverageColorFromImage","src","img","Image","canvas","document","createElement","ctx","getContext","Promise","resolve","reject","onload","height","width","drawImage","imageData","getImageData","rgba","data","forEach","v","i","r","g","b","onerror","e","rgbToHsl","rgb","h","s","max","Math","min","l","d","hslToRgb","hsl","hue2rgb","p","q","t","rgbToColorCode","ceil","toString","fileInput","querySelector","addEventListener","event","file","target","files","reader","FileReader","type","indexOf","result","then","res","bgColor","txtRgb","txtColor","newFigure","newImage","append","newArticle","innerHTML","newInfomation","classList","add","toUpperCase","style","backgroundColor","color","newSection","appendChild","prepend","readAsDataURL","window","querySelectorAll","item","catch","console","error"],"mappings":"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","file":"main.8c5914b1.js","sourceRoot":"..","sourcesContent":["export function GetAverageColorFromImage(src) {\n  const img = new Image()\n  img.src = src\n  const canvas = document.createElement(\"canvas\")\n  const ctx = canvas.getContext('2d')\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      canvas.height = img.height\n      canvas.width = img.width\n      ctx.drawImage(img, 0, 0)\n      const imageData = ctx.getImageData(0, 0, img.width, img.height)\n      let rgba = [0,0,0,0]     \n    \n      imageData.data.forEach((v,i) => {\n        rgba[i % 4] = rgba[i % 4] + v   \n      })\n      const r = rgba[0] / (img.width * img.height)\n      const g = rgba[1] / (img.width * img.height)\n      const b = rgba[2] / (img.width * img.height)\n      resolve([r,g,b])\n    };\n    img.onerror = (e) => reject(e)\n  });\n}\n\n","export function rgbToHsl(rgb){\n  const r = rgb[0] / 255, g = rgb[1] / 255, b = rgb[2] / 255;\n  const max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h, s, l = (max + min) / 2;\n  if(max == min){\n      h = s = 0; // achromatic\n  }else{\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch(max){\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n      }\n      h /= 6;\n  }\n\n  return [h, s, l];\n}\n\nexport function hslToRgb(hsl){\n  const h = hsl[0], s = hsl[1], l = hsl[2]\n  let r, g, b\n  if(s == 0){\n      r = g = b = l; // achromatic\n  }else{\n      function hue2rgb(p, q, t){\n          if(t < 0) t += 1;\n          if(t > 1) t -= 1;\n          if(t < 1/6) return p + (q - p) * 6 * t;\n          if(t < 1/2) return q;\n          if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n          return p;\n      }\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nexport function rgbToColorCode(rgb) {\n  return `#${Math.ceil(rgb[0]).toString(16)}${Math.ceil(rgb[1]).toString(16)}${Math.ceil(rgb[2]).toString(16)}`\n}","import {GetAverageColorFromImage} from './js/GetAverageColorFromImage'\nimport {rgbToHsl,hslToRgb, rgbToColorCode} from './js/ColorUtils'\n\nconst fileInput = document.querySelector('.file-input')\nfileInput.addEventListener('change', (event) =>{\n  const file = event.target.files[0]\n  const reader = new FileReader()\n\n  // 画像ファイル以外の場合は処理を中断\n  if( file.type.indexOf('image') < 0){\n    return false;\n  }\n  reader.onload = ((file) => {\n    GetAverageColorFromImage(file.target.result).then((res)=>{\n      let bgColor = `rgba(${res[0]}, ${res[1]}, ${res[2]},1.0)`\n      // テキストカラーを計算\n      let hsl = rgbToHsl(res)\n      let txtRgb\n      if(hsl[2] >= 0.50){\n        txtRgb = hslToRgb([hsl[0],hsl[1],0.2])\n      }else{\n        txtRgb = hslToRgb([hsl[0],hsl[1],0.8])\n      }\n      let txtColor =  `rgba(${txtRgb[0]}, ${txtRgb[1]}, ${txtRgb[2]},1.0)`;\n\n      let newFigure = document.createElement('figure')\n      let newImage = document.createElement('img')\n      newImage.src = file.target.result\n      newFigure.append(newImage)\n\n      let newArticle = document.createElement('article')\n      newArticle.innerHTML = '<h1>Lorem ipsum dolor sit amet</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>';\n      let newInfomation = document.createElement('div')\n      newInfomation.classList.add('info')\n      newInfomation.innerHTML = `bg.${rgbToColorCode(res).toUpperCase()}  /  tx.${rgbToColorCode(txtRgb).toUpperCase()}`\n      newInfomation.style.backgroundColor = txtColor\n      newInfomation.style.color = bgColor\n      newArticle.append(newInfomation)\n\n      let newSection = document.createElement('section')\n      newSection.classList.add('item')\n      newSection.appendChild(newFigure)  \n      newSection.appendChild(newArticle)  \n      newSection.style.backgroundColor = bgColor\n      newSection.style.color = txtColor\n\n      let resultsView = document.querySelector('.results')\n      resultsView.prepend(newSection)\n    \n    })\n  })\n  reader.readAsDataURL(file)\n})\n\nwindow.onload = function() {\n  let items = document.querySelectorAll('.item')\n  items.forEach(v => {\n    let item = v.querySelector(\".thumbnail img\")\n    GetAverageColorFromImage(item.src).then(res => {\n      let hsl = rgbToHsl(res)\n      if(hsl[2] >= 0.50){\n        let rgb = hslToRgb([hsl[0],hsl[1],0.2])\n        v.style.color = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]},1.0)`;\n      }else{\n        let rgb = hslToRgb([hsl[0],hsl[1],0.8])\n        v.style.color = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]},1.0)`;\n      }\n      v.style.backgroundColor = `rgba(${res[0]}, ${res[1]}, ${res[2]},1.0)`;\n    }).catch((e) =>{\n      console.error(e)\n    })  \n  })\n};\n\n"]}